---
import GlassCard from '../components/GlassCard.astro';
import Layout from '../layouts/Layout.astro';


const tagIcons: {[key: string]: string} = {
    JavaScript: "tagIcons/js.svg",
    CSS: "tagIcons/css.svg",  
    Python: "tagIcons/python.svg",
    PyPlot: " tagIcons/pyplot.svg",  
    Qiskit: "tagIcons/qiskit.svg",
    HTML: "tagIcons/html.svg",
    SQL:'tagIcons/sql.svg'
}
const tags = ["JavaScript", "HTML", "CSS", "Python", "PyPlot", "SQL"];
---

<Layout title="Amets Martiarena - Portfolio">
	<div class="flex flex-row 2xl:px-40 py-28 ">
        <GlassCard class="relative mx-5 flex-col rounded-xl my-12 p ">
                <section class="text-center mb-6 ">
                    <h1 class="dark:text-slate-400 light:text-slate-700 font-bold text-xl mb-2">Amets Martiarena Elosegi</h1>
                    <div class="flex justify-center gap-4 mt-2">
                        <a href="tel:+34686736305" class="dark:text-slate-400 dark:hover:text-slate-300 light:text-slate-700 light:hover:text-slate-600 hover:underline transition-colors">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>
                            </svg>
                            <span class="sr-only">Teléfono</span>
                        </a>
                        <a href="mailto:ametsmartia@gmail.com" class="dark:text-slate-400 dark:hover:text-slate-300 light:text-slate-700 light:hover:text-slate-600 hover:underline transition-colors">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
                                <polyline points="22,6 12,13 2,6"></polyline>
                            </svg>
                            <span class="sr-only">Email</span>
                        </a>
                    </div>
                </section>

                <section class="mb-6">
                    <h2 class="dark:text-slate-400 light:text-slate-700 font-bold text-xl mb-2">Contacto</h2>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-slate-600 dark:text-slate-300">
                        <div class="flex items-center gap-2">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-slate-300 dark:text-slate-400" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>
                            </svg>
                            <span>688 73 63 86</span>
                        </div>
                        <div class="flex items-center gap-2">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-slate-300 dark:text-slate-400" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
                                <polyline points="22,6 12,13 2,6"></polyline>
                            </svg>
                            <span>ametsmarti7@gmail.com</span>
                        </div>
                        <div class="flex items-center gap-2">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-slate-300 dark:text-slate-400" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
                                <circle cx="12" cy="10" r="3"></circle>
                            </svg>
                            <span>Azkue Kalea 3, 1-D. Ibarra. Gipuzkoa</span>
                        </div>
                        <div class="flex items-center gap-2">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-slate-300 dark:text-slate-400" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                                <line x1="16" y1="2" x2="16" y2="6"></line>
                                <line x1="8" y1="2" x2="8" y2="6"></line>
                                <line x1="3" y1="10" x2="21" y2="10"></line>
                            </svg>
                            <span>2004/07/20</span>
                        </div>
                   
                </section>

                

                <section class="mb-6">
                    <h2 class="dark:text-slate-400 light:text-slate-700 font-bold text-xl mb-2">Idiomas</h2>
                    <div class="space-y-2 text-slate-700 dark:text-slate-300">
                        <div class="flex justify-between">
                            <span class="font-medium text-slate-300 dark:text-slate-400">Euskera</span>
                            <span>Idioma nativo</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="font-medium text-slate-300 dark:text-slate-400">Inglés</span>
                            <span>Nivel B2</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="font-medium text-slate-300 dark:text-slate-400">Castellano</span>
                            <span>Nivel alto</span>
                        </div>
                    </div>
                </section>

                <section class="mb-6">
                    <h2 class="dark:text-slate-400 light:text-slate-700 font-bold text-xl mb-2">Habilidades y conocimiento</h2>
						<div class ="tags my-2 flex flex-wrap">
							{tags.map((tag: string) => (
								<span class="flex items-center  bg-slate-100 text-slate-800 text-xs font-medium me-2 px-1.5 py-0.5 rounded dark:bg-slate-700 dark:text-slate-400 border border-slate-500 mb-2">
									{tagIcons[tag] && <img src={tagIcons[tag]} alt={tag} class="w-4 h-4 mr-1"/>}
									{tag}
								</span>
							))}
						</div>
					<h2 class="dark:text-slate-400 light:text-slate-700 font-bold text-xl mb-2">Areas de Interés </h2>
					<div class="space-y-2 text-slate-700 dark:text-slate-300">
						<ul class="list-none space-y-2 text-slate-700 dark:text-slate-300">
							<li>Desarrollo/Diseño Web</li>
							<li>Gráficos 3D y Shaders</li>
							<li>Simulación de Entornos Fisicos</li>
						</ul>
					</div>

                </section>

                <section>
                    <h2 class="dark:text-slate-400 light:text-slate-700 font-bold text-xl mb-2">Formación Académica</h2>
                    <div class="space-y-4 text-slate-700 dark:text-slate-300">
                        <div>
                            <h3 class="dark:text-slate-400 light:text-slate-700 font-semibold text-lg">Grado en Ingeniería Informática (En curso)</h3>
                            <p class="text-sm text-slate-400 dark:text-slate-400 mb-2">2022-2026</p>
                            <p class="text-sm text-slate-400 dark:text-slate-400 mb-2">Actualmente en el 3er año, especializándome en Computación.</p>
                        </div>
                        <div>
                            <h3 class="dark:text-slate-400 light:text-slate-700 font-semibold text-lg">Estudios de Bachillerato</h3>
                            <p class="text-sm text-slate-500 dark:text-slate-400 mb-2">Rama de Ciencias,Orixe BHI, Tolosa</p>
                        </div>
                        <div>
                            <h3 class="dark:text-slate-400 light:text-slate-700 font-semibold text-lg">Educación Primaria</h3>
                            <p class="text-sm text-slate-500 dark:text-slate-400 mb-2">Uzturpe Ikastola, Ibarra</p>
                        </div>
                    </div>
                </section>
			</GlassCard>
			<div id="particles-container" class=" relative w-full h-auto pointer-events-none border border-slate-700 bg-slate-800 rounded-xl mx-10" ></div>
		</div>
	
</Layout>

<script>
	import * as THREE from 'three';

	// Set up scene
	const scene = new THREE.Scene();
	const camera = new THREE.PerspectiveCamera(75, 1, 0.2, 1000);

	// Create renderer
	const renderer = new THREE.WebGLRenderer({ alpha: true });
	const container = document.getElementById('particles-container');

	if (container) {
		const containerRect = container.getBoundingClientRect();
		renderer.setSize(containerRect.width, containerRect.height);
		renderer.setClearColor(0x000000, 0);

		// Add renderer to DOM
		container.appendChild(renderer.domElement);

		// Position the canvas
		renderer.domElement.style.position = 'absolute';
		renderer.domElement.style.top = '0';
		renderer.domElement.style.left = '0';
		renderer.domElement.style.zIndex = '1';

		const vertexShader = `
			varying vec3 vNormal;

			void main() {
				vNormal = normal;
				gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
			}
		`;

		const fragmentShader = `
			varying vec3 vNormal;

			void main() {
				vec3 normal = normalize(vNormal);
				float intensity = dot(normal, vec3(0.5, 1.0, 0.));
				vec3 color = vec3(0.3, 0.2, 0.3) * intensity;
				gl_FragColor = vec4(color, 0.6);
			}
		`;

		// Create particles
		const particlesGeometry = new THREE.OctahedronGeometry(1, 0);

		// Material
		const shaderMaterial = new THREE.ShaderMaterial({
			vertexShader: vertexShader,
			fragmentShader: fragmentShader,
			transparent: true,
		});

		const sphere = new THREE.Mesh(particlesGeometry, shaderMaterial);

		// Mesh
		scene.add(sphere)

		// Position camera
		camera.position.z = 2;

		// Mouse tracking
		let mouseX = 0;
		let mouseY = 0;

		let isDragging = false;

		document.addEventListener('mousedown', () => {
			isDragging = true;
		});

		document.addEventListener('mouseup', () => {
			isDragging = false;
		});

		document.addEventListener('mousemove', (event) => {
			mouseX = (event.clientX / window.innerWidth) * 2 - 1;
			mouseY = -(event.clientY / window.innerHeight) * 2 + 1;
		});

		// Animation loop
		const animate = () => {
			requestAnimationFrame(animate);

			if (isDragging) {
				// Rotate particles based on mouse position
				//move to mouse position
				
				sphere.rotation.y += mouseX * 0.5;
				sphere.rotation.x += -mouseY * 0.5;
			} else {
				// Auto rotate
				sphere.rotation.x += 0.005;
				sphere.rotation.y += 0.005;
			}

			renderer.render(scene, camera);
		};


		animate();
	}
</script>