---
import Header from '../components/Header.jsx';
import Footer from '../components/Footer.astro';

import es from '../locales/es/translation.json';
import en from '../locales/en/translation.json';
import eu from '../locales/eu/translation.json';

const translations = {
	es,
	en,
	eu
};

interface Props {
	title: string;
}

const { title } = Astro.props;
const base = import.meta.env.BASE_URL;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Amets Martiarena" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href={`${base}favicon.svg`} />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<base href={base} />
	</head>
	
	<body class="bg-slate-900 dark:bg-slate-900 light:bg-gray-100">
		
		
		<!-- Content layer -->
		<div class="relative z-10">
	
			<slot />
			<script define:vars={{ translations }}>
					(function(){
					window.allTranslations = translations;
					window.currentLanguage = 'es';
					window.translations = translations.es;

					function t(key, fallback = key){
						return key.split('.').reduce(
						(acc,p)=> (acc && typeof acc==='object' && p in acc) ? acc[p] : fallback,
						window.translations
						);
					}
					window.t = t;

					function apply(){
						document.querySelectorAll('[data-i18n]').forEach(el=>{
						const k = el.getAttribute('data-i18n');
						if(!k) return;
						const v = t(k);
						if(v !== k) el.textContent = v;
						});
					}

					window.changeLanguage = function(lang){
						if(!window.allTranslations[lang]) return false;
						window.translations = window.allTranslations[lang];
						window.currentLanguage = lang;
						apply();
						document.dispatchEvent(new CustomEvent('languageChanged',{detail:{language:lang}}));
						return true;
					};

					document.addEventListener('DOMContentLoaded', apply);
					})();
				</script>
			
			<Footer />
		</div>
	</body>
</html>

<style is:global>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 48, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}
	
	/* Dark theme variables */
	.dark {
		--bg-primary: 17, 24, 39; /* gray-900 */
		--bg-secondary: 31, 41, 55; /* gray-800 */
		--bg-card: 55, 65, 81; /* gray-700 */
		--text-primary: 248, 250, 252; /* slate-50 */
		--text-secondary: 203, 213, 225; /* slate-300 */
		--text-muted: 148, 163, 184; /* slate-400 */
		--border-color: 71, 85, 105; /* slate-600 */
	}
	
	/* Light theme variables */
	.light {
		--bg-primary: 249, 250, 251; /* gray-50 */
		--bg-secondary: 243, 244, 246; /* gray-100 */
		--bg-card: 255, 255, 255; /* white */
		--text-primary: 17, 24, 39; /* gray-900 */
		--text-secondary: 55, 65, 81; /* gray-700 */
		--text-muted: 107, 114, 128; /* gray-500 */
		--border-color: 209, 213, 219; /* gray-300 */
	}
	
	html {
		font-family: system-ui, sans-serif;
		background-size: 224px;
		transition: color-scheme 0.3s ease;
	}
	
	.dark {
		color-scheme: dark;
	}
	
	.light {
		color-scheme: light;
	}
	
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}

</style>


